# -*- coding: utf-8 -*-
"""Assignment1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16eHlCh_HaVIf5ZXgWU-D6POojXAsI05-
"""

import json,requests
import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
import matplotlib
import matplotlib.pyplot as plt

name = input("Enter Author Name:")

"""import lib"""

j = requests.get('https://api.semanticscholar.org/graph/v1/author/search?query=' + name +'&fields=name,citationCount,papers,papers.citationCount').json()

j

"""# create an empty embeddings list (or) np.array()

# iterate through values in j['data']
# iterate through each author's papers
# get embeddings of each paper using API url in step 2.
# add embedding to embeddings list

# come out of loop
# you will call the cosine_similarity() function

# you can plot your colorbar (as shown in examples)

from sklearn.metrics.pairwise import cosine_similarity

for i in j['data']:
  for l in i['papers']:
    p = 'url' + l['paperId']

cosine_similarity_result = cosine_simalirity(embeddings)

# use above result to plot the colorbar

for j keys
"""

len(j['data'])

[d['authorId'] for d in j['data']]

"""Citations:"""

def citations(rec): return rec['citationCount']
[(d['authorId'], citations(d)) for d in j['data']]

"""# Sort author ids by citations"""

ids =[d['authorId'] for d in sorted(j['data'], key=citations, reverse=True)]
ids

"""get the paper id"""

y = []
for i in j['data']:
  for l in i['papers']:
    a = l['paperId']
    y.append(a)

y

y

"""how to get an embedding for one paper"""



embedding = []
for z in range(200):
  p = requests.get('https://api.semanticscholar.org/graph/v1/paper/'+ y[z] +'?fields=embedding').json()
  if p['embedding'] != None:
    embedding.append(p['embedding']['vector'])
embedding

len(embedding)

"""similarity"""

plt.imshow(cosine_similarity(embedding))
plt.colorbar()